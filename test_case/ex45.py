#coding=utf-8
'''
2014-2-11
习题45：函数，类的常用命名规则
'''

"""
函数的风格
以前我教过的怎样写好函数的方法一样是适用的，不过这里要添加几条：
• 由于各种各样的原因，程序员将 class (类)里边的函数称作 method （方法）。很大程度上这
只是个市场策略（用来推销 OOP），不过如果你把它们称作“函数”的话，是会有啰嗦的人跳
出来纠正你的。如果你觉得他们太烦了，你可以告诉他们从数学方面演示一下“函数”和“方
法”究竟有什么不同，这样他们会很快闭嘴的。
• 在你使用 class 的过程中，很大一部分时间是告诉你的 class 如何“做事情”。给这些函数命名
的时候，与其命名成一个名词，不如命名为一个动词，作为给 class 的一个命令。就和 list 的
pop (抛出)函数一样，它相当于说：“嘿，列表，把这东西给我 pop 出去。”它的名字不是
remove_from_end_of_list ，因为即使它的功能的确是这样，这一串字符也不是一个命
令。
• 让你的函数保持简单小巧。由于某些原因，有些人开始学习 class 后就会忘了这一条。

类的风格
• 你的 class 应该使用 “camel case（驼峰式大小写）”，例如你应该使用
SuperGoldFactory 而不是 super_gold_factory。
• 你的 __init__ 不应该做太多的事情，这会让 class 变得难以使用。
• 你的其它函数应该使用 “underscore format（下划线隔词）”，所以你可以写
my_awesome_hair，
而不是 myawesomehair 或者 MyAwesomeHair 。
• 用一致的方式组织函数的参数。如果你的 class 需要处理 users、dogs、和 cats，就保持这个次
序（特别情况除外）。如果一个函数的参数是 (dog, cat, user) ，另一个的是 (user,
cat, dog) ，这会让函数使用起来很困难。
• 不要对全局变量或者来自模组的变量进行重定义或者赋值，让这些东西自顾自就行了。
• 不要一根筋式地维持风格一致性，这是思维力底下的妖怪喽啰做的事情。一致性是好事情，不过
愚蠢地跟着别人遵从一些白痴口号是错误的行为——这本身就是一种坏的风格。好好为自己照想
把。
• 永远永远都使用 class Name(object) 的方式定义 class，否则你会碰到大麻烦。
"""